# Generated by Django 5.2.6 on 2025-10-08 10:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'device_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.PositiveSmallIntegerField()),
                ('subnet_mask', models.CharField(max_length=255)),
                ('total_addresses', models.BigIntegerField()),
                ('usable_hosts', models.BigIntegerField()),
            ],
            options={
                'db_table': 'subnets',
                'ordering': ['prefix'],
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Branches',
                'db_table': 'branches',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='branches_name_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='ips.branch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=255, unique=True, validators=[django.core.validators.validate_ipv4_address])),
                ('device_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ips', to='ips.branch')),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ips', to='ips.devicetype')),
                ('subnet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ips', to='ips.subnet')),
            ],
            options={
                'verbose_name': 'IP Address',
                'verbose_name_plural': 'IP Addresses',
                'db_table': 'ips',
                'ordering': ['ip_address'],
                'indexes': [models.Index(fields=['branch', 'ip_address'], name='ips_branch_ip_idx'), models.Index(fields=['branch', 'subnet'], name='ips_branch_subnet_idx'), models.Index(fields=['device_name'], name='ips_device_name_idx'), models.Index(fields=['device_type'], name='ips_device_type_idx'), models.Index(fields=['ip_address'], name='ips_ip_address_idx')],
            },
        ),
    ]
